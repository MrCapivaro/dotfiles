// ~/.config/zellij/config.kdl
// vim: commentstring=//\ %s


// Plugins {{{

// Plugin Aliases (changes require restart)
plugins {
    vim-zellij-navigator location="https://github.com/hiasr/vim-zellij-navigator/releases/download/0.2.1/vim-zellij-navigator.wasm"

    /// Builtin Plugins
    session-manager location="zellij:session-manager"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    // Statuses Bars
    tab-bar location="zellij:tab-bar"
    status-bar location="zellij:status-bar"
    compact-bar location="zellij:compact-bar"
    // File Handlers
    filepicker location="zellij:strider" {
        cwd "/"
    }
    strider location="zellij:strider"
    // Configuration Helpers
    configuration location="zellij:configuration"
    plugin-manager location="zellij:plugin-manager"
}

// Plugins to load in the background when a new session starts
load_plugins {
  // "file:/path/to/my-plugin.wasm"
  // "https://example.com/my-plugin.wasm"
}

// }}}
// Keymaps {{{

keybinds clear-defaults=true {
    normal {
        bind "Ctrl Space" { SwitchToMode "Tmux"; }
        /// Aliases

        // Tab Cycling
        bind "Ctrl Tab" { GoToNextTab; }
        bind "Ctrl Shift Tab" { GoToPreviousTab; }

        // Pane Movement
        bind "Ctrl h" {
            MessagePlugin "vim-zellij-navigator" {
                name "move_focus";
                payload "left";
                move_mod "ctrl";
            };
        }
        bind "Ctrl j" {
            MessagePlugin "vim-zellij-navigator" {
                name "move_focus";
                payload "down";
                move_mod "ctrl";
            };
        }
        bind "Ctrl k" {
            MessagePlugin "vim-zellij-navigator" {
                name "move_focus";
                payload "up";
                move_mod "ctrl";
            };
        }
        bind "Ctrl l" {
            MessagePlugin "vim-zellij-navigator" {
                name "move_focus";
                payload "right";
                move_mod "ctrl";
            };
        }

        // Pane Resize
        bind "Ctrl Shift h" {
            MessagePlugin "vim-zellij-navigator" {
                name "resize";
                payload "left";
                resize_mod "ctrl";
            };
        }
        bind "Ctrl Shift j" {
            MessagePlugin "vim-zellij-navigator" {
                name "resize";
                payload "down";
                resize_mod "ctrl";
            };
        }
        bind "Ctrl Shift k" {
            MessagePlugin "vim-zellij-navigator" {
                name "resize";
                payload "up";
                resize_mod "ctrl";
            };
        }
        bind "Ctrl Shift l" {
            MessagePlugin "vim-zellij-navigator" {
                name "resize";
                payload "right";
                resize_mod "ctrl";
            };
        }
    }

    tmux {
        /// Quit
        bind "Q" { Detach; }

        /// Exit Command Mode
        bind "Esc" { Write 2; SwitchToMode "Normal"; }

        /// Panes
        bind "s" { NewPane "Down"; SwitchToMode "Normal"; }
        bind "v" { NewPane "Right"; SwitchToMode "Normal"; }
        bind "," { SwitchToMode "RenamePane"; }
        bind "q" { CloseFocus; SwitchToMode "Normal"; }
        bind "f" { ToggleFocusFullscreen; SwitchToMode "Normal"; }

        // Pane Focus Movement
        bind "h" { MoveFocus "Left"; SwitchToMode "Normal"; }
        bind "j" { MoveFocus "Down"; SwitchToMode "Normal"; }
        bind "k" { MoveFocus "Up"; SwitchToMode "Normal"; }
        bind "l" { MoveFocus "Right"; SwitchToMode "Normal"; }

        // Pane Resize
        bind "Shift h" { Resize "Left"; SwitchToMode "Normal"; }
        bind "Shift j" { Resize "Down"; SwitchToMode "Normal"; }
        bind "Shift k" { Resize "Up"; SwitchToMode "Normal"; }
        bind "Shift l" { Resize "Right"; SwitchToMode "Normal"; }

        // Pane Position Movement
        bind "Ctrl h" { MovePane "Left"; SwitchToMode "Normal"; }
        bind "Ctrl j" { MovePane "Down"; SwitchToMode "Normal"; }
        bind "Ctrl k" { MovePane "Up"; SwitchToMode "Normal"; }
        bind "Ctrl l" { MovePane "Right"; SwitchToMode "Normal"; }

        /// Tabs
        bind "t" { NewTab; SwitchToMode "Normal"; }
        bind "," { SwitchToMode "RenameTab"; }
        bind "n" { GoToNextTab; SwitchToMode "Normal"; }
        bind "p" { GoToPreviousTab; SwitchToMode "Normal"; }

        /// Other Modes
        bind "Space" { SwitchToMode "Scroll"; }
    }

    scroll {
        bind "Esc"               { SwitchToMode "Normal"; }
        bind "j"                 { ScrollDown; }
        bind "k"                 { ScrollUp; }
        bind "Ctrl d"            { HalfPageScrollDown; }
        bind "Ctrl u"            { HalfPageScrollUp; }
        bind "Ctrl f" "PageDown" { PageScrollDown; }
        bind "Ctrl b" "PageUp"   { PageScrollUp; }
    }

    renametab {
        bind "Enter" { SwitchToMode "Normal"; }
        bind "Esc" { UndoRenameTab; SwitchToMode "Normal"; }
    }

    renamepane {
        bind "Enter" { SwitchToMode "Normal"; }
        bind "Esc" { UndoRenamePane; SwitchToMode "Normal"; }
    }

    // locked {
    //     bind "Esc" { SwitchToMode "Normal"; }
    // }
}

// }}}
// Appearance {{{

// Scrollback lines to serialize along with the pane viewport when serializing
// sessions, 0
// defaults to the scrollback size. If this number is higher than the
// scrollback size, it will
// also default to the scrollback size. This does nothing if
// `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000

// Define color themes for Zellij
// For more examples, see:
// https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the
// "theme" section of this file
//
themes {
    gruvbox-light {
        bg 213 196 161
        fg 80 73 69
        orange 152 0 5
        green 121 116 14
        yellow 215 153 33
        blue 69 133 136
        magenta 177 98 134
        cyan 104 157 106
        black 235 219 178
        white 60 56 54
        red 214 93 14
    }
    gruvbox-dark {
        fg 235 219 178
        bg 80 73 69
        black 60 56 54
        red 204 36 29
        green 152 151 26
        yellow 215 153 33
        blue 69 133 136
        magenta 177 98 134
        cyan 104 157 106
        white 251 241 199
        orange 214 93 14
    }
}

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "gruvbox-dark"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
simplified_ui true

// }}}
// Misc. {{{

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
on_force_close "detach"

// Choose the path to the default shell that zellij will use for opening new
// panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
pane_frames false

// Toggle between having Zellij lay out panes according to a predefined set of
// layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their
// tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// session_serialization false

// Whether pane viewports are serialized along with the session, default is
// false
// (Requires restart)
// Options:
//   - true
//   - false (default)
//
// serialize_pane_viewport true

// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
//
// default_layout "compact"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
// default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the
// system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "system"

// Enable or disable automatic copy (and clear) of selection when releasing
// mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "/path/to/my/theme_dir"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other
// sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
// disable_session_metadata true

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host
// terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false

// }}}
